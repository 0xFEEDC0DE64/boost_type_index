Index: trunk/boost/test/execution_monitor.hpp
===================================================================
--- trunk/boost/test/execution_monitor.hpp	(revision 86235)
+++ trunk/boost/test/execution_monitor.hpp	(working copy)
@@ -261,7 +261,7 @@
     template<typename ExceptionType>
     void        erase_exception_translator( boost::type<ExceptionType>* = 0 )
     {
-        m_custom_translators = m_custom_translators->erase<ExceptionType>( m_custom_translators );
+        m_custom_translators = m_custom_translators->template erase<ExceptionType>( m_custom_translators );
     }
 
 private:
Index: trunk/boost/test/tree/test_case_template.hpp
===================================================================
--- trunk/boost/test/tree/test_case_template.hpp	(revision 86235)
+++ trunk/boost/test/tree/test_case_template.hpp	(working copy)
@@ -34,8 +34,13 @@
 #include <boost/type_traits/is_const.hpp>
 #include <boost/function/function0.hpp>
 
+#ifndef BOOST_NO_RTTI
+#include <typeinfo> // for typeid
+#else
+#include <boost/current_function.hpp>
+#endif
+
 // STL
-#include <typeinfo> // for typeid
 #include <string>   // for std::string
 #include <list>     // for std::list
 
@@ -77,7 +82,11 @@
         std::string full_name;
         assign_op( full_name, m_test_case_name, 0 );
         full_name += '<';
+#ifndef BOOST_NO_RTTI
         full_name += typeid(TestType).name();
+#else
+        full_name += BOOST_CURRENT_FUNCTION;
+#endif
         if( boost::is_const<TestType>::value )
             full_name += " const";
         full_name += '>';
